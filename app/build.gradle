apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

android {
    signingConfigs {
        release
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "in.org.klp.kontact"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 10
        versionName "0.8"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        devel {
            applicationId "in.org.klp.mobile.development"
            buildConfigField 'String', 'HOST', '"http://dev.klp.org.in:80"'
        }

        prod {
            applicationId "in.org.klp.mobile.release"
            buildConfigField 'String', 'HOST', '"http://klp.org.in:80"'
        }
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.neenbedankt.android-apt'

play {
    jsonFile = file('Google Play Android Developer-0b17472fdb08.json')
    track = 'alpha'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.google.android.gms:play-services-appindexing:8.1.0'

    // squidb - https://github.com/yahoo/squidb
    compile 'com.yahoo.squidb:squidb:2.0.2'
    compile 'com.yahoo.squidb:squidb-annotations:2.0.2'
    apt 'com.yahoo.squidb:squidb-processor:2.0.2'

    // SQLite Asset Helper - https://github.com/jgilfelt/android-sqlite-asset-helper
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:+'

    // Volley - https://android.googlesource.com/platform/frameworks/volley
    compile 'com.android.volley:volley:1.0.0'
}

def Properties props = new Properties()
def propFile = new File('release.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('KEYSTORE') && props.containsKey('KEYSTORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['KEYSTORE'])
        android.signingConfigs.release.storePassword = props['KEYSTORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'release.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
}else {
    println 'release.properties not found'
    android.buildTypes.release.signingConfig = null
}